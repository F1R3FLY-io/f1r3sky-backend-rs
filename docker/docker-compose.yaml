services:
  postgresql:
    image: postgres:17-bookworm
    ports:
      - 5434:5432
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    command: postgres -c log_statement=all
    tmpfs:
      - /var/lib/postgresql/data

  postgresql-2:
    image: postgres:17-bookworm
    ports:
      - 5435:5432
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    profiles:
      - multiple-networks
    command: postgres -c log_statement=all
    tmpfs:
      - /var/lib/postgresql/data

  minio:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    tmpfs:
      - /data
    command: server /data --console-address ":9001"

  firefly:
    build:
      context: .
      dockerfile: firefly.dockerfile
    ports:
      - 40400:40400
      - 40401:40401
      - 40402:40402
      - 40403:40403
      - 40404:40404
      - 40405:40405
    volumes:
    - ./ssl:/data/ssl
    command: run -s
      --validator-private-key=6a786ec387aff99fcce1bd6faa35916bfad3686d5c98e90a89f77670f535607c 
      --host firefly 
      --no-upnp --allow-private-addresses --synchrony-constraint-threshold=0.0 
      --approve-duration 10seconds --approve-interval 10seconds 
      --protocol-port 40400 --discovery-port 40404
      --tls-certificate-path /data/ssl/node.certificate.pem --tls-key-path /data/ssl/node.key.pem #for constant bootstrap address


  firefly-read:
    build:
      context: .
      dockerfile: firefly.dockerfile
    ports:
      - 40411:40401
      - 40413:40403
      - 40415:40405
      - 40410:40410
      - 40414:40414

    command: run -b "rnode://ebffd419dea60220734ccea8875e86d87bac10a7@firefly?protocol=40400&discovery=40404"
      --host firefly-read
      --no-upnp --allow-private-addresses
      --protocol-port 40410 --discovery-port 40414
      --approve-duration 10seconds --approve-interval 10seconds
      --fork-choice-check-if-stale-interval 30seconds --fork-choice-stale-threshold 30seconds
# add to .env address from firefly logs, for example:
# VALIDATOR_FIREFLY_ADDRESS='"rnode://583695e432861b045d15d5ca3176efbcd3193207@firefly?protocol=40400&discovery=40404"' # not working if hardcoded in the docker-compose

  did-plc:
    image: ihorrr/did-method-plc
    depends_on:
      - postgresql
    environment:
      DB_CREDS_JSON: '{ "password": "", "host": "postgresql" }'
      DB_SCHEMA: plc
      ENABLE_MIGRATIONS: true
      DB_MIGRATE_CREDS_JSON: '{ "password": "", "host": "postgresql" }'
      PORT: 2582

  state-sync-init:
    build:
      context: ..
      dockerfile: docker/state-sync.dockerfile
      args:
        POSTGRESQL_VERSION: 17
    depends_on:
      firefly:
        condition: service_healthy
    restart: no
    profiles:
      - state-sync
    command:
      - --wallet-key=a8cf01d889cc6ef3119ecbd57301036a52c41ae6e44964e098cb2aefa4598954
      - --deploy-service-url=http://firefly:40401
      - --propose-service-url=http://firefly:40402
      - --service-id=docker-pds
      - init

  state-sync:
    build:
      context: ..
      dockerfile: docker/state-sync.dockerfile
      args:
        POSTGRESQL_VERSION: 17
    depends_on:
      firefly:
        condition: service_healthy
      state-sync-init:
        condition: service_completed_successfully
    profiles:
      - state-sync
    command:
      - --wallet-key=a8cf01d889cc6ef3119ecbd57301036a52c41ae6e44964e098cb2aefa4598954
      - --deploy-service-url=http://firefly:40401
      - --propose-service-url=http://firefly:40402
      - --service-id=docker-pds
      - upload
      - --db-url=postgresql://postgres@postgresql:5432
      - --interval=300

  events-init:
    build:
      context: ..
      dockerfile: docker/events-sync.dockerfile
    depends_on:
      firefly:
        condition: service_healthy
    restart: no
    profiles:
      - multiple-networks
    command:
      - --wallet-key=a8cf01d889cc6ef3119ecbd57301036a52c41ae6e44964e098cb2aefa4598954
      - --deploy-service-url=http://firefly:40401
      - --propose-service-url=http://firefly:40402
      - --service-id=docker-pds
      - init

  events-listen:
    build:
      context: ..
      dockerfile: docker/events-sync.dockerfile
    depends_on:
      firefly:
        condition: service_healthy
      events-init:
        condition: service_completed_successfully
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 2683:2683
    profiles:
      - multiple-networks
    command:
      - --wallet-key=a8cf01d889cc6ef3119ecbd57301036a52c41ae6e44964e098cb2aefa4598954
      - --deploy-service-url=http://firefly:40401
      - --propose-service-url=http://firefly:40402
      - --service-id=docker-pds
      - listen
      - --communication-service-api-addr=0.0.0.0:8082
      - --sync-api-addr=0.0.0.0:2683
      - --external-hostname=events-listen
      - --extra-sources=ws://host.docker.internal:2999/xrpc/com.atproto.sync.subscribeRepos

  events-push:
    build:
      context: ..
      dockerfile: docker/events-sync.dockerfile
    depends_on:
      firefly:
        condition: service_healthy
      events-init:
        condition: service_completed_successfully
    extra_hosts:
      - host.docker.internal:host-gateway
    profiles:
      - multiple-networks
    command:
      - --wallet-key=a8cf01d889cc6ef3119ecbd57301036a52c41ae6e44964e098cb2aefa4598954
      - --deploy-service-url=http://firefly:40401
      - --propose-service-url=http://firefly:40402
      - --service-id=docker-pds
      - push
      - --events-source-url=ws://host.docker.internal:2583/xrpc/com.atproto.sync.subscribeRepos
      - --time-threshold=3
      - --size-threshold=16
